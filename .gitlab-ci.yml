image: "rust:slim"

stages:
  - check
  - build
  - test
  - release

# Variable defaults
variables:
  RUST_VERSION: stable

# Install compiler and OpenSSL dependencies
before_script:
  - |
    rustup install $RUST_VERSION
    rustup default $RUST_VERSION
  - |
    rustc --version
    cargo --version

# Check on stable, beta, nightly and MSRV
.check-base: &check-base
  stage: check
  script:
    - cargo check --verbose
check-stable:
  <<: *check-base
check-beta:
  <<: *check-base
  variables:
    RUST_VERSION: beta
check-nightly:
  <<: *check-base
  variables:
    RUST_VERSION: nightly
check-msrv:
  <<: *check-base
  variables:
    RUST_VERSION: "1.43.0"

# Build on stable
build:
  stage: build
  needs: []
  dependencies: []
  script:
    - cargo build --release --verbose

# Test on stable
test:
  stage: test
  needs: []
  dependencies: []
  script:
    - cargo test --verbose

# Gather test coverage
test-coverage:
  stage: test
  needs: []
  dependencies: []
  coverage: '/^\d+.\d+% coverage/'
  script:
    - apt-get update
    - apt-get install -y --no-install-recommends pkg-config libssl-dev
    - cargo install cargo-tarpaulin -f
    - |
      if [ -z "$COVERALLS_TOKEN" ]; then
          cargo tarpaulin --verbose --avoid-cfg-tarpaulin --out Xml;
      else
          cargo tarpaulin --verbose --avoid-cfg-tarpaulin --coveralls $COVERALLS_TOKEN --out Xml;
      fi

# Release crate on crates.io
release-crate:
  stage: release
  dependencies: []
  only:
    - /^v(\d+\.)*\d+$/
  script:
    - echo "Creating release crate to publish on crates.io..."
    - echo $CARGO_TOKEN | cargo login
    - echo "Publishing crate to crates.io..."
    - cargo publish --verbose --allow-dirty
